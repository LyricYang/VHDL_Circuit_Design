// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Stage_8_32D_HH_
#define _Stage_8_32D_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Efficient_Cor_fsubkb.h"
#include "Stage_8_32D_dff_32D.h"

namespace ap_rtl {

struct Stage_8_32D : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > buf_a_address0;
    sc_out< sc_logic > buf_a_ce0;
    sc_in< sc_lv<32> > buf_a_q0;
    sc_out< sc_lv<3> > buf_cor_32D_a_address0;
    sc_out< sc_logic > buf_cor_32D_a_ce0;
    sc_out< sc_logic > buf_cor_32D_a_we0;
    sc_out< sc_lv<32> > buf_cor_32D_a_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Stage_8_32D(sc_module_name name);
    SC_HAS_PROCESS(Stage_8_32D);

    ~Stage_8_32D();

    sc_trace_file* mVcdFile;

    Stage_8_32D_dff_32D* dff_32D_U;
    Efficient_Cor_fsubkb<1,4,32,32,32>* Efficient_Cor_fsubkb_x_U14;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > dff_32D_address0;
    sc_signal< sc_logic > dff_32D_ce0;
    sc_signal< sc_logic > dff_32D_we0;
    sc_signal< sc_lv<32> > dff_32D_d0;
    sc_signal< sc_lv<32> > dff_32D_q0;
    sc_signal< sc_lv<32> > i_cast1_fu_143_p1;
    sc_signal< sc_lv<32> > i_cast1_reg_234;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > tmp_13_cast_fu_161_p1;
    sc_signal< sc_lv<10> > tmp_13_cast_reg_239;
    sc_signal< sc_lv<8> > dff_32D_addr_1_reg_250;
    sc_signal< sc_lv<4> > i_3_fu_186_p2;
    sc_signal< sc_lv<4> > i_3_reg_258;
    sc_signal< sc_lv<1> > exitcond1_fu_180_p2;
    sc_signal< sc_lv<32> > dff_32D_load_reg_268;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > buf_b_load_reg_273;
    sc_signal< sc_lv<32> > grp_fu_132_p2;
    sc_signal< sc_lv<32> > tmp_reg_279;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > dff_32D_addr_3_reg_284;
    sc_signal< sc_lv<1> > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > tmp_1_fu_214_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_292;
    sc_signal< sc_lv<1> > tmp_16_fu_206_p3;
    sc_signal< sc_lv<6> > grp_fu_136_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state10;
    sc_signal< sc_lv<4> > i_reg_109;
    sc_signal< sc_lv<6> > k_phi_fu_124_p4;
    sc_signal< sc_lv<6> > k_reg_120;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > tmp_14_fu_171_p3;
    sc_signal< sc_lv<32> > tmp_12_fu_156_p1;
    sc_signal< sc_lv<32> > tmp_16_cast_fu_201_p1;
    sc_signal< sc_lv<32> > tmp_17_cast_fu_229_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > grp_fu_136_p0;
    sc_signal< sc_lv<9> > tmp_s_fu_148_p3;
    sc_signal< sc_lv<9> > tmp_13_fu_165_p2;
    sc_signal< sc_lv<10> > k_cast_cast_fu_192_p1;
    sc_signal< sc_lv<10> > tmp_15_fu_196_p2;
    sc_signal< sc_lv<10> > tmp_2_cast_cast_fu_220_p1;
    sc_signal< sc_lv<10> > tmp_17_fu_224_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_1F;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<9> ap_const_lv9_1F;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<6> ap_const_lv6_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buf_a_address0();
    void thread_buf_a_ce0();
    void thread_buf_cor_32D_a_address0();
    void thread_buf_cor_32D_a_ce0();
    void thread_buf_cor_32D_a_d0();
    void thread_buf_cor_32D_a_we0();
    void thread_dff_32D_address0();
    void thread_dff_32D_ce0();
    void thread_dff_32D_d0();
    void thread_dff_32D_we0();
    void thread_exitcond1_fu_180_p2();
    void thread_grp_fu_136_p0();
    void thread_grp_fu_136_p2();
    void thread_i_3_fu_186_p2();
    void thread_i_cast1_fu_143_p1();
    void thread_k_cast_cast_fu_192_p1();
    void thread_k_phi_fu_124_p4();
    void thread_tmp_12_fu_156_p1();
    void thread_tmp_13_cast_fu_161_p1();
    void thread_tmp_13_fu_165_p2();
    void thread_tmp_14_fu_171_p3();
    void thread_tmp_15_fu_196_p2();
    void thread_tmp_16_cast_fu_201_p1();
    void thread_tmp_16_fu_206_p3();
    void thread_tmp_17_cast_fu_229_p1();
    void thread_tmp_17_fu_224_p2();
    void thread_tmp_1_fu_214_p2();
    void thread_tmp_2_cast_cast_fu_220_p1();
    void thread_tmp_s_fu_148_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
