// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _MatrixMultiply_HH_
#define _MatrixMultiply_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "MatrixMultiply_mubkb.h"

namespace ap_rtl {

struct MatrixMultiply : public sc_module {
    // Port declarations 46
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > AA_0;
    sc_in< sc_lv<32> > AA_1;
    sc_in< sc_lv<32> > AA_2;
    sc_in< sc_lv<32> > AA_3;
    sc_in< sc_lv<32> > AA_4;
    sc_in< sc_lv<32> > AA_5;
    sc_in< sc_lv<32> > AA_6;
    sc_in< sc_lv<32> > AA_7;
    sc_in< sc_lv<32> > AA_8;
    sc_in< sc_lv<32> > AA_9;
    sc_in< sc_lv<32> > AA_10;
    sc_in< sc_lv<32> > AA_11;
    sc_in< sc_lv<32> > AA_12;
    sc_in< sc_lv<32> > AA_13;
    sc_in< sc_lv<32> > AA_14;
    sc_in< sc_lv<32> > AA_15;
    sc_in< sc_lv<32> > AA_16;
    sc_in< sc_lv<32> > AA_17;
    sc_in< sc_lv<32> > AA_18;
    sc_in< sc_lv<32> > AA_19;
    sc_in< sc_lv<32> > AA_20;
    sc_in< sc_lv<32> > AA_21;
    sc_in< sc_lv<32> > AA_22;
    sc_in< sc_lv<32> > AA_23;
    sc_in< sc_lv<32> > AA_24;
    sc_in< sc_lv<32> > bb_0;
    sc_in< sc_lv<32> > bb_1;
    sc_in< sc_lv<32> > bb_2;
    sc_in< sc_lv<32> > bb_3;
    sc_in< sc_lv<32> > bb_4;
    sc_out< sc_lv<32> > cc_0;
    sc_out< sc_logic > cc_0_ap_vld;
    sc_out< sc_lv<32> > cc_1;
    sc_out< sc_logic > cc_1_ap_vld;
    sc_out< sc_lv<32> > cc_2;
    sc_out< sc_logic > cc_2_ap_vld;
    sc_out< sc_lv<32> > cc_3;
    sc_out< sc_logic > cc_3_ap_vld;
    sc_out< sc_lv<32> > cc_4;
    sc_out< sc_logic > cc_4_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    MatrixMultiply(sc_module_name name);
    SC_HAS_PROCESS(MatrixMultiply);

    ~MatrixMultiply();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    MatrixMultiply_mubkb<1,3,32,32,32>* MatrixMultiply_mubkb_U0;
    MatrixMultiply_mubkb<1,3,32,32,32>* MatrixMultiply_mubkb_U1;
    MatrixMultiply_mubkb<1,3,32,32,32>* MatrixMultiply_mubkb_U2;
    MatrixMultiply_mubkb<1,3,32,32,32>* MatrixMultiply_mubkb_U3;
    MatrixMultiply_mubkb<1,3,32,32,32>* MatrixMultiply_mubkb_U4;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_1_fu_339_p2;
    sc_signal< sc_lv<3> > i_1_reg_603;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > sel_tmp_fu_363_p2;
    sc_signal< sc_lv<1> > sel_tmp_reg_608;
    sc_signal< sc_lv<1> > exitcond1_fu_333_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_369_p2;
    sc_signal< sc_lv<1> > sel_tmp2_reg_613;
    sc_signal< sc_lv<1> > sel_tmp4_fu_375_p2;
    sc_signal< sc_lv<1> > sel_tmp4_reg_623;
    sc_signal< sc_lv<1> > sel_tmp6_fu_381_p2;
    sc_signal< sc_lv<1> > sel_tmp6_reg_628;
    sc_signal< sc_lv<32> > newSel3_fu_423_p3;
    sc_signal< sc_lv<32> > newSel3_reg_638;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > newSel7_fu_453_p3;
    sc_signal< sc_lv<32> > newSel7_reg_643;
    sc_signal< sc_lv<32> > newSel11_fu_483_p3;
    sc_signal< sc_lv<32> > newSel11_reg_648;
    sc_signal< sc_lv<32> > newSel15_fu_513_p3;
    sc_signal< sc_lv<32> > newSel15_reg_653;
    sc_signal< sc_lv<32> > newSel19_fu_543_p3;
    sc_signal< sc_lv<32> > newSel19_reg_658;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > grp_fu_551_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_688;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > grp_fu_556_p2;
    sc_signal< sc_lv<32> > tmp_3_1_reg_693;
    sc_signal< sc_lv<32> > grp_fu_561_p2;
    sc_signal< sc_lv<32> > tmp_3_2_reg_698;
    sc_signal< sc_lv<32> > grp_fu_566_p2;
    sc_signal< sc_lv<32> > tmp_3_3_reg_703;
    sc_signal< sc_lv<32> > grp_fu_571_p2;
    sc_signal< sc_lv<32> > tmp_3_4_reg_708;
    sc_signal< sc_lv<3> > i_reg_321;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > sum_1_4_fu_589_p2;
    sc_signal< sc_lv<5> > tmp_1_fu_345_p1;
    sc_signal< sc_lv<5> > tmp_fu_349_p3;
    sc_signal< sc_lv<5> > tmp_t_fu_357_p2;
    sc_signal< sc_lv<1> > or_cond_fu_394_p2;
    sc_signal< sc_lv<32> > newSel_fu_387_p3;
    sc_signal< sc_lv<32> > newSel1_fu_398_p3;
    sc_signal< sc_lv<1> > or_cond1_fu_405_p2;
    sc_signal< sc_lv<1> > or_cond2_fu_417_p2;
    sc_signal< sc_lv<32> > newSel2_fu_409_p3;
    sc_signal< sc_lv<32> > newSel4_fu_431_p3;
    sc_signal< sc_lv<32> > newSel5_fu_438_p3;
    sc_signal< sc_lv<32> > newSel6_fu_445_p3;
    sc_signal< sc_lv<32> > newSel8_fu_461_p3;
    sc_signal< sc_lv<32> > newSel9_fu_468_p3;
    sc_signal< sc_lv<32> > newSel10_fu_475_p3;
    sc_signal< sc_lv<32> > newSel12_fu_491_p3;
    sc_signal< sc_lv<32> > newSel13_fu_498_p3;
    sc_signal< sc_lv<32> > newSel14_fu_505_p3;
    sc_signal< sc_lv<32> > newSel16_fu_521_p3;
    sc_signal< sc_lv<32> > newSel17_fu_528_p3;
    sc_signal< sc_lv<32> > newSel18_fu_535_p3;
    sc_signal< sc_lv<32> > tmp2_fu_580_p2;
    sc_signal< sc_lv<32> > tmp1_fu_576_p2;
    sc_signal< sc_lv<32> > tmp3_fu_584_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_cc_0();
    void thread_cc_0_ap_vld();
    void thread_cc_1();
    void thread_cc_1_ap_vld();
    void thread_cc_2();
    void thread_cc_2_ap_vld();
    void thread_cc_3();
    void thread_cc_3_ap_vld();
    void thread_cc_4();
    void thread_cc_4_ap_vld();
    void thread_exitcond1_fu_333_p2();
    void thread_i_1_fu_339_p2();
    void thread_newSel10_fu_475_p3();
    void thread_newSel11_fu_483_p3();
    void thread_newSel12_fu_491_p3();
    void thread_newSel13_fu_498_p3();
    void thread_newSel14_fu_505_p3();
    void thread_newSel15_fu_513_p3();
    void thread_newSel16_fu_521_p3();
    void thread_newSel17_fu_528_p3();
    void thread_newSel18_fu_535_p3();
    void thread_newSel19_fu_543_p3();
    void thread_newSel1_fu_398_p3();
    void thread_newSel2_fu_409_p3();
    void thread_newSel3_fu_423_p3();
    void thread_newSel4_fu_431_p3();
    void thread_newSel5_fu_438_p3();
    void thread_newSel6_fu_445_p3();
    void thread_newSel7_fu_453_p3();
    void thread_newSel8_fu_461_p3();
    void thread_newSel9_fu_468_p3();
    void thread_newSel_fu_387_p3();
    void thread_or_cond1_fu_405_p2();
    void thread_or_cond2_fu_417_p2();
    void thread_or_cond_fu_394_p2();
    void thread_sel_tmp2_fu_369_p2();
    void thread_sel_tmp4_fu_375_p2();
    void thread_sel_tmp6_fu_381_p2();
    void thread_sel_tmp_fu_363_p2();
    void thread_sum_1_4_fu_589_p2();
    void thread_tmp1_fu_576_p2();
    void thread_tmp2_fu_580_p2();
    void thread_tmp3_fu_584_p2();
    void thread_tmp_1_fu_345_p1();
    void thread_tmp_fu_349_p3();
    void thread_tmp_t_fu_357_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
